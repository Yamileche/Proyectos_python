from copy import deepcopy
import time

global size, Bool
size = 8
Bool = False


x = 5
y = 4

tablero = list()
row = list()
for i in range(size):
	row.append(0)
for i in range(size):
	tablero.append(row.copy())
x-=1
y-=1
tablero[y][x] = 1


solutions = list()
	
def muestra(tab = list()):
	if tab == list():
		return none
	for i in range(size):
		for j in range(size):
			print(str(tab[i][j]).ljust(4), end = "")
		print()
		
		
def nextPos(lista = list(), tab = tablero):
    hor = lista[0]
    ver = lista[1]
    return sorted([[hor+i, ver+j] for i in [-2, 2, 1, -1] for j in [-1, 1, 2, -2] if abs(i)!=abs(j) and hor+i >=0 and hor+i<size and ver+j>=0 and ver+j<size])


def filtrado(tab = tablero):
	for i in range(size):
		for j in range(size):
			if tablero[j][i] == 0:
				next = nextPos([i,j], tab = tab)
				T = False
				for k in next:
					if tablero[k[1]][k[0]] == 0:
						T = True
				if not T:
					return False
	return True

def siguiente(tab = tablero, pos = [0,0]):
	
	next = nextPos(pos)
	next = sorted(next, key= lambda x: len(nextPos(x)))
	
	if len(next)>1:
	
		if len(nextPos(next[0]))== len(nextPos(next[1])):
			next0 = next[0].copy()
			next1 = next[1].copy()
			e0 = next0[0] + next0[1]
			e1 = next1[0] + next1[1]
			
			min0 = min([e0, 2*size - e0])			
			min1 = min([e1, 2*size - e1])
			
			if min1 < min0:
				next[0] = next1
				next[1] = next0
				
	"""
	next = nextPos(pos)
	next = sorted(next, key= lambda x: len(nextPos(x)))
	m = len(next)
	if m>1:
		l = len(nextPos(next[0]))
		n = 0
		for k in range(m):
			if l < len(nextPos(next[k])):
				n= k
				break
		nextAux = next[:n]
		nextAux = sorted(nextAux, key= lambda x: min([x[0] + x[1],2*size - x[0] - x[1]]))
	"""
	return next
			
				
def control(tab = tablero, pos = [0,0], num = 2):
	global Bool
	if num > size*size or Bool:
		return None
	

	next = siguiente(pos = pos, tab = tab)
	
	#print("\n\n Cambio", next)
	#print("\n\nEntra")
	if len(next) > 0:
		for i in next:
			#print("\n\n", i, pos)
			if Bool:
				break
			if tab[i[1]][i[0]] != 0:
				#print("\n\nNo pasó")
				continue
			tabaux = deepcopy(tab)
			tabaux[i[1]][i[0]] = num
			#print("\n\n", num, next)
			#muestra(tabaux)
			if num == size*size:
				Bool = True
				#print("llegó")
				tablero = tabaux
				solutions.append(deepcopy(tabaux))
				return None
			control(tab = tabaux, pos = i, num = num+1)

	#print("\nVacío")


print("\nEsto puede tardar...\n\n")
inicio = time.time() 
muestra(tablero)

control(pos = [x,y])
print("\n\n\nSolución:\n")
if solutions != list():
	muestra(solutions[0])
final = time.time()
print("\n\nTiempo de ejecución: ", final-inicio, "s")
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

